name: Deploy Backend & Frontend

on:
  push:
    branches:
      - main
      - dev

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies (Backend)
        run: |
          cd backend
          npm install
      - name: Run Backend Tests
        run: |
          cd backend
          npm test

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies (Frontend)
        run: |
          cd frontend
          npm install
      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test

  deploy-backend:
    runs-on: ubuntu-latest
    needs: test-backend   # ‚úÖ pehle backend tests pass hone chahiye
    steps:
      - uses: actions/checkout@v3
      - name: Set Backend Hook
        run: |
          if [ "${GITHUB_REF##*/}" == "main" ]; then
            echo "RENDER_DEPLOY_HOOK=${{ secrets.RENDER_DEPLOY_HOOK }}" >> $GITHUB_ENV
          else
            echo "RENDER_DEPLOY_HOOK=${{ secrets.RENDER_DEPLOY_HOOK_STAGING }}" >> $GITHUB_ENV
          fi
      - name: Deploy Backend
        run: curl "$RENDER_DEPLOY_HOOK"

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: test-frontend   # ‚úÖ pehle frontend tests pass hone chahiye
    steps:
      - uses: actions/checkout@v3
      - name: Set Frontend Hook
        run: |
          if [ "${GITHUB_REF##*/}" == "main" ]; then
            echo "RENDER_DEPLOY_HOOK=${{ secrets.RENDER_DEPLOY_HOOK_FRONTEND }}" >> $GITHUB_ENV
          else
            echo "RENDER_DEPLOY_HOOK=${{ secrets.RENDER_DEPLOY_HOOK_FRONTEND_STAGING }}" >> $GITHUB_ENV
          fi
      - name: Deploy Frontend
        run: curl "$RENDER_DEPLOY_HOOK"
- name: Notify Slack on Success
  if: success()
  run: |
    curl -X POST -H 'Content-type: application/json' \
    --data '{"text":"‚úÖ Deployment SUCCESSFUL for *${GITHUB_REF##*/}* branch üöÄ"}' \
    ${{ secrets.SLACK_WEBHOOK_URL }}

- name: Notify Slack on Failure
  if: failure()
  run: |
    curl -X POST -H 'Content-type: application/json' \
    --data '{"text":"‚ùå Deployment FAILED for *${GITHUB_REF##*/}* branch üî•"}' \
    ${{ secrets.SLACK_WEBHOOK_URL }}
